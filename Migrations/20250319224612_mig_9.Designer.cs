// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WattsFlowProject.Data;

#nullable disable

namespace WattsFlowProject.Migrations
{
    [DbContext(typeof(WattsFlowDbContext))]
    [Migration("20250319224612_mig_9")]
    partial class mig_9
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WattsFlowProject.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Building")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<double>("CircuitBreakerPower")
                        .HasColumnType("double");

                    b.Property<DateTime?>("DeactivationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("FixedPayment")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Floor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<string>("SideType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("CustomerId");

                    b.HasIndex("PostId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("WattsFlowProject.Models.CustomerTraffic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("CurrentTraffic")
                        .HasColumnType("double");

                    b.Property<DateTime>("CurrentTrafficDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal?>("PaidAmount")
                        .IsRequired()
                        .HasColumnType("decimal(65,30)");

                    b.Property<double>("PreviousTraffic")
                        .HasColumnType("double");

                    b.Property<DateTime>("PreviousTrafficDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("PriceLBP")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("PriceUSD")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Traffics");
                });

            modelBuilder.Entity("WattsFlowProject.Models.CustomerTrafficHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Consumption")
                        .HasColumnType("double");

                    b.Property<double>("CurrentTraffic")
                        .HasColumnType("double");

                    b.Property<DateTime>("CurrentTrafficDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal?>("PaidAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<double>("PreviousTraffic")
                        .HasColumnType("double");

                    b.Property<DateTime>("PreviousTrafficDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("PriceLBP")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("PriceUSD")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("RemainingAmount")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("TrafficHistories");
                });

            modelBuilder.Entity("WattsFlowProject.Models.ExpenseType", b =>
                {
                    b.Property<int>("ExpensesTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ExpenseTypeName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("ExpensesTypeId");

                    b.ToTable("Types");
                });

            modelBuilder.Entity("WattsFlowProject.Models.Expenses", b =>
                {
                    b.Property<int>("ExpenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("ExpenseDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ExpensesTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("ExpenseId");

                    b.HasIndex("ExpensesTypeId");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("WattsFlowProject.Models.PostDetails", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("PostAddress")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PostNumber")
                        .HasColumnType("int");

                    b.HasKey("PostId");

                    b.ToTable("Details");
                });

            modelBuilder.Entity("WattsFlowProject.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("WattsFlowProject.Models.SystemSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("KwPrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("LiraRate")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("SystemSettings");
                });

            modelBuilder.Entity("WattsFlowProject.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WattsFlowProject.Models.Customer", b =>
                {
                    b.HasOne("WattsFlowProject.Models.PostDetails", "PostDetails")
                        .WithMany("Customers")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PostDetails");
                });

            modelBuilder.Entity("WattsFlowProject.Models.CustomerTraffic", b =>
                {
                    b.HasOne("WattsFlowProject.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("WattsFlowProject.Models.CustomerTrafficHistory", b =>
                {
                    b.HasOne("WattsFlowProject.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("WattsFlowProject.Models.Expenses", b =>
                {
                    b.HasOne("WattsFlowProject.Models.ExpenseType", "ExpenseType")
                        .WithMany("Expenses")
                        .HasForeignKey("ExpensesTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExpenseType");
                });

            modelBuilder.Entity("WattsFlowProject.Models.User", b =>
                {
                    b.HasOne("WattsFlowProject.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("WattsFlowProject.Models.ExpenseType", b =>
                {
                    b.Navigation("Expenses");
                });

            modelBuilder.Entity("WattsFlowProject.Models.PostDetails", b =>
                {
                    b.Navigation("Customers");
                });

            modelBuilder.Entity("WattsFlowProject.Models.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
